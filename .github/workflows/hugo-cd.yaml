---
name: ðŸš€ Continuous Deployment

on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      HUGO_VERSION:
        default: latest
        required: false
        type: string
    secrets:
      TF_API_TOKEN:
        required: true

jobs:
  ci:
    uses: ./.github/workflows/hugo-ci.yaml
    secrets:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
    with:
      HUGO_VERSION: ${{ inputs.HUGO_VERSION }}

  deploy:
    if: ${{ !endsWith(github.repository, '-template') }}
    needs:
      - ci
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      TF_IN_AUTOMATION: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: chetan/git-restore-mtime-action@v2
      - uses: actions/download-artifact@v3
        with:
          name: public_html
          path: public/
      - uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ inputs.HUGO_VERSION }}
          extended: true
      - uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: Run `terraform init`
        run: terraform -chdir=infra init -input=false
      - name: Run `terraform apply`
        run: terraform -chdir=infra apply -input=false -auto-approve
      - name: Setup Environment
        id: aws
        run: |
          AWS_REGION="$(terraform -chdir=infra output -raw aws_region)"
          AWS_ROLE="$(terraform -chdir=infra output -raw ci_aws_role)"
          AWS_S3_BUCKET_NAME="$(terraform -chdir=infra output -raw aws_s3_bucket_name)"
          echo "aws_region=$AWS_REGION" >> $GITHUB_OUTPUT
          echo "aws_role=$AWS_ROLE" >> $GITHUB_OUTPUT
          echo "aws_bucket_name=$AWS_S3_BUCKET_NAME" >> $GITHUB_OUTPUT

      - name: Configure Hugo
        run: |
          yq -i '.targets[0].name = "production"' config/production/deployment.yaml
          yq -i '.targets[0].URL = "s3://${{ steps.aws.outputs.aws_bucket_name }}?region=${{ steps.aws.outputs.aws_region }}"' config/production/deployment.yaml

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ steps.aws.outputs.aws_region }}
          role-to-assume: ${{ steps.aws.outputs.aws_role }}

      - name: Sync S3 Bucket
        run: PATH=.:$PATH make deploy
